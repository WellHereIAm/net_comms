1. Create Client struct similar to Server.
2. Concepts:
    Create some File struct to be hold inside new MetaData is_file field.
    Create some UserLite struct to hold only needed user data, without password etc. , just whatÂ´s needed.
   
3. Move whole command module to client as it is client only, create for server similar one.
4. Create tests.
5. Solve unwraps from thread spawning in Server and other unwraps in Server.
6. Change ServerReply::Error message to enum with error variants.
7. Change ServerReply::User User to new UserLite.
8. Create automatic backups for server
    Create chunked users HashMap and waiting_messages HashMap, periodically go through those and save them to files(update existing ones)
    Create ability to start server from backup and to gracefully shut-down server.

11. Fail to send data to output thread should not panic as does now.
12. Documentation 
        Re-do ron module
        Message multiple implementations.
        Whole server

13. Create custom parsers for struct sent through network.
14. Look into reworking Packet and PacketKind to format of PacketPretty.
15. Try make messages even smaller, without sacrificing readability.
16. Maybe remove location argument in ContentType::receive, replace it with Config in client.
17. Change Server and probably Client structs to independent functions. As it seems like those struct are pretty much useless.
